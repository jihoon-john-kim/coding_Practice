class Solution {
    public int[] nextGreaterElements(int[] nums) {
        Stack<Integer> monoStack = new Stack<>(); 
        int[] output = new int[nums.length];

        Arrays.fill(output, -1);
        for(int c = 0; c < 2; c++){
            for(int i = 0; i < nums.length; i++){
                while(!monoStack.isEmpty() && nums[monoStack.peek()] < nums[i]){
                    output[monoStack.pop()] = nums[i];
                }

                monoStack.push(i);
            }
        }

        return output;
    }
}
/*
class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int[] ans = new int[nums.length];
        for(int i=0; i<nums.length; i++){
            ans[i]=-1;
            for(int j=1; j<nums.length; j++){
                if(nums[i]<nums[(i+j)%nums.length]){
                    ans[i]=nums[(i+j)%nums.length];
                    break;
                }
            }
        }
        return ans;
    }
}
*/
