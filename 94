class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        while(!stack.isEmpty() || root!=null){
            while(root!=null){
                stack.push(root);
                root=root.left;
            }
            root=stack.pop();
            ans.add(root.val);
            root=root.right;
        }
        return ans;

    }
}

/*
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<Integer>();
        helper(root, ans);
        return ans;
    }
    public void helper(TreeNode root, List<Integer> ans){
        if(root!=null){
            helper(root.left, ans);
            ans.add(root.val);
            helper(root.right, ans);
        }        
    }
}
 */
